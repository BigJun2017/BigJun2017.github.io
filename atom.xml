<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog4Jun</title>
  
  <subtitle>Doraemon</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://junzhou2016.github.io/"/>
  <updated>2018-12-09T08:13:48.302Z</updated>
  <id>https://junzhou2016.github.io/</id>
  
  <author>
    <name>Pursue</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用nativefier将web打包为WebApp</title>
    <link href="https://junzhou2016.github.io/2018/12/09/ruan-jian-gong-ju/nodejs/shi-yong-nativefier-jiang-web-da-bao-wei-webapp/"/>
    <id>https://junzhou2016.github.io/2018/12/09/ruan-jian-gong-ju/nodejs/shi-yong-nativefier-jiang-web-da-bao-wei-webapp/</id>
    <published>2018-12-09T15:10:00.000Z</published>
    <updated>2018-12-09T08:13:48.302Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在github上浪的时候发现一款开源库，可以直接将任意的网站打包为webapp。具体的操作步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装node.js环境&lt;/li&gt;
&lt;li&gt;使用npm安装nativefier库；&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;npm
        
      
    
    </summary>
    
      <category term="软件工具" scheme="https://junzhou2016.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="NodeJs" scheme="https://junzhou2016.github.io/tags/NodeJs/"/>
    
  </entry>
  
  <entry>
    <title>Alibaba开源组件-分布式流量控制框架sentinel初探</title>
    <link href="https://junzhou2016.github.io/2018/12/09/hou-duan/fen-bu-shi-kuang-jia/alibaba-kai-yuan-zu-jian-fen-bu-shi-liu-liang-kong-zhi-kuang-jia-sentinel-chu-tan/"/>
    <id>https://junzhou2016.github.io/2018/12/09/hou-duan/fen-bu-shi-kuang-jia/alibaba-kai-yuan-zu-jian-fen-bu-shi-liu-liang-kong-zhi-kuang-jia-sentinel-chu-tan/</id>
    <published>2018-12-09T10:47:00.000Z</published>
    <updated>2018-12-09T10:30:12.593Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Sentinel 是什么？&lt;br&gt;还是皮一下吧详细的介绍在Alibaba已经介绍的很详细了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/Sentinel/wiki/%E4%BB%8B%E7%BB%8D&quot;
        
      
    
    </summary>
    
      <category term="后端" scheme="https://junzhou2016.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="分布式" scheme="https://junzhou2016.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="Sentinel" scheme="https://junzhou2016.github.io/tags/Sentinel/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL线上审核规范</title>
    <link href="https://junzhou2016.github.io/2018/12/09/shu-ju-ku/mysql-xian-shang-shen-he-gui-fan/"/>
    <id>https://junzhou2016.github.io/2018/12/09/shu-ju-ku/mysql-xian-shang-shen-he-gui-fan/</id>
    <published>2018-12-09T10:27:00.000Z</published>
    <updated>2018-12-09T10:28:11.649Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;命名规范&lt;/strong&gt;&lt;br&gt;Ø库名、表名、字段名，使用小写字母&lt;/p&gt;
&lt;p&gt;Ø库名、表名、字段名，不要超过30个字符&lt;/p&gt;
&lt;p&gt;Ø库名、表名、字段名，尽量见名知意，使用下划线分割&lt;/p&gt;
&lt;p&gt;Ø库名、表名、字段名，禁止使用MySQL保留字&lt;/p
        
      
    
    </summary>
    
      <category term="数据库" scheme="https://junzhou2016.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MYSQL" scheme="https://junzhou2016.github.io/tags/MYSQL/"/>
    
      <category term="数据库" scheme="https://junzhou2016.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>好开心，七牛外链失效的图片找回来了</title>
    <link href="https://junzhou2016.github.io/2018/12/08/sui-bi/hao-kai-xin-qi-niu-wai-lian-shi-xiao-de-tu-pian-zhao-hui-lai-liao/"/>
    <id>https://junzhou2016.github.io/2018/12/08/sui-bi/hao-kai-xin-qi-niu-wai-lian-shi-xiao-de-tu-pian-zhao-hui-lai-liao/</id>
    <published>2018-12-07T16:00:00.000Z</published>
    <updated>2018-12-08T10:17:45.838Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;今天把我存在七牛云上的图片找回来了，好开心。&lt;br&gt;&lt;img
        
      
    
    </summary>
    
      <category term="随笔" scheme="https://junzhou2016.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="Java" scheme="https://junzhou2016.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>自己对react中flux框架部分底层原理的理解</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/zi-ji-dui-react-zhong-flux-kuang-jia-bu-fen-di-ceng-yuan-li-de-li-jie/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/zi-ji-dui-react-zhong-flux-kuang-jia-bu-fen-di-ceng-yuan-li-de-li-jie/</id>
    <published>2018-12-04T12:35:56.459Z</published>
    <updated>2018-12-09T12:35:47.983Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;这是我在学习react框架时的个人理解，包含个人总结和案例中代码的分析，对于react中部分与内存分配相关的原理还是不是很懂:&lt;br&gt;1.个人总结：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flux架构的理解：&lt;br&gt;    flux架构中数据是单向流动的；&lt;br&gt;   
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>运行时异常-RunTimeExcepption</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/yun-xing-shi-yi-chang-runtimeexcepption/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/yun-xing-shi-yi-chang-runtimeexcepption/</id>
    <published>2018-12-04T12:35:56.457Z</published>
    <updated>2018-12-09T12:35:39.014Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;前几天写代码的时候，遇到一个需求，保存的时候如果重名则不执行保存，并抛出异常。但是当我抛出的不是运行时异常的时候，这个异常就需要一层层的捕获。就像下面这样：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ExceptionTest .java

package
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>用JAVA判断一个URL是否有效</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/yong-java-pan-duan-yi-ge-url-shi-fou-you-xiao/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/yong-java-pan-duan-yi-ge-url-shi-fou-you-xiao/</id>
    <published>2018-12-04T12:35:56.456Z</published>
    <updated>2018-12-09T12:35:33.783Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近因项目需求，需要针对一些URL地址进行检测是否可用，使用Java.NET 下的类来实现，主要用到了 URL和HttpURLConnection 二个类 ，URL
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>移动端学习之初始化-angular4的学习</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/yi-dong-duan-xue-xi-zhi-chu-shi-hua-angular4-de-xue-xi/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/yi-dong-duan-xue-xi-zhi-chu-shi-hua-angular4-de-xue-xi/</id>
    <published>2018-12-04T12:35:56.454Z</published>
    <updated>2018-01-07T14:00:12.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近在学习angular4感觉也没有那么难啦，好奇移动端到底可以做出啥，继续学习中……&lt;br&gt;&lt;img
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用七牛上传图片的demo</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/shi-yong-qi-niu-shang-chuan-tu-pian-de-demo/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/shi-yong-qi-niu-shang-chuan-tu-pian-de-demo/</id>
    <published>2018-12-04T12:35:56.453Z</published>
    <updated>2018-02-01T00:46:02.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;七牛是一个很好的第三方的图片服务器,下面介绍一下使用七牛上传图片的demo.&lt;br&gt;1、直接上代码:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;UploadDemo.java


----------
package com.qiniu.up;

import
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用XShell部署SpringBoot的jar文件到Linux服务器上</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/shi-yong-xshell-bu-shu-springboot-de-jar-wen-jian-dao-linux-fu-wu-qi-shang/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/shi-yong-xshell-bu-shu-springboot-de-jar-wen-jian-dao-linux-fu-wu-qi-shang/</id>
    <published>2018-12-04T12:35:56.451Z</published>
    <updated>2018-04-15T14:15:50.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近师傅教我了通过jenkins发布项目，但是发现公司的Maven出了点问题，因此就用XShell进行项目的发布操作。发布的步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在eclipse中通过Maven命令Clean–&amp;gt;Install生成jar文件；&lt;br&gt;clean:清楚t
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用JSOUP爬取国家统计局的地理位置数据</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/shi-yong-jsoup-pa-qu-guo-jia-tong-ji-ju-de-di-li-wei-zhi-shu-ju/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/shi-yong-jsoup-pa-qu-guo-jia-tong-ji-ju-de-di-li-wei-zhi-shu-ju/</id>
    <published>2018-12-04T12:35:56.449Z</published>
    <updated>2018-09-02T09:04:02.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近因工作需要，我需要爬取国家统计局的最新统计数据。因此参照网上的例子使用JSOUP爬取了国家统计局的省、市、县、镇、村的数据。因为要爬取的数据较多，因此在里面使用了多线程的相关技术。下面首先讲解下多线程相关的东西。&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用Jenkins配置Git+Maven的自动化构建</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/shi-yong-jenkins-pei-zhi-git-maven-de-zi-dong-hua-gou-jian/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/shi-yong-jenkins-pei-zhi-git-maven-de-zi-dong-hua-gou-jian/</id>
    <published>2018-12-04T12:35:56.448Z</published>
    <updated>2017-09-06T08:53:16.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;hr&gt;
&lt;p&gt;最近安装Jenkins，参照网上的各种资料进行尝试，折腾了好久，但是查找了这么多资料，相似度在90%以上！！！，相同的安装过程，测试了几台机器，未曾成功，不得不感慨自己能力有限，最终慢慢摸索，形成思路，现分享给大家，希望大家在安装的时候少走弯路。&lt;/p&gt;
&lt;p&gt;P
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用jenkins+github+tomcat实现Springboot半自动化部署</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/shi-yong-jenkins-github-tomcat-shi-xian-springboot-ban-zi-dong-hua-bu-shu/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/shi-yong-jenkins-github-tomcat-shi-xian-springboot-ban-zi-dong-hua-bu-shu/</id>
    <published>2018-12-04T12:35:56.446Z</published>
    <updated>2018-02-05T13:00:02.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;本文讲解的是使用jenkins+github+tomcat实现springboot项目的半自动化部署，为啥叫做半自动化部署？因为我没钱买服务器，webhook又无法访问本地服务器，因此没有使用webhook进行全自动的部署演示，并且我本人认为，全自动的部署是没有必要的，因为
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo+github搭建个人博客</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/shi-yong-hexo-github-da-jian-ge-ren-wei-bo/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/shi-yong-hexo-github-da-jian-ge-ren-wei-bo/</id>
    <published>2018-12-04T12:35:56.444Z</published>
    <updated>2017-08-29T09:39:02.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;   &lt;strong&gt;使用hexo+github搭建博客的步骤为：&lt;/strong&gt;&lt;br&gt;       1.软件的安装；&lt;br&gt;                 (1.)安装Node；&lt;br&gt;                 (2.)安装Hexo;&lt;br&gt;       
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>适配器模式</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/she-ji-mo-shi-zhi-gua-pei-qi-mo-shi/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/she-ji-mo-shi-zhi-gua-pei-qi-mo-shi/</id>
    <published>2018-12-04T12:35:56.443Z</published>
    <updated>2017-09-08T10:53:44.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;pre&gt;&lt;code&gt;   适配器模式(Adapter
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>明天就要学转前端了，收集了一些资料放这里了</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/ming-tian-jiu-yao-xue-zhuan-qian-duan-liao-shou-ji-liao-yi-xie-zi-liao-fang-zhe-li-liao/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/ming-tian-jiu-yao-xue-zhuan-qian-duan-liao-shou-ji-liao-yi-xie-zi-liao-fang-zhe-li-liao/</id>
    <published>2018-12-04T12:35:56.441Z</published>
    <updated>2017-12-03T13:33:18.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;#下面是资料的链接，请尊重资料的作者，不要随意转发。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;1.react相关的学习资料&lt;br&gt;&lt;a href=&quot;http://it-ebooks.flygon.net/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>面向对象程序设计原则</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/mian-xiang-dui-xiang-cheng-xu-she-ji-liu-da-yuan-ze/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/mian-xiang-dui-xiang-cheng-xu-she-ji-liu-da-yuan-ze/</id>
    <published>2018-12-04T12:35:56.440Z</published>
    <updated>2017-08-29T09:50:52.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;面向对象程序设计原则&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;一、单一职责原则：
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;全称：“Single-Responsibility
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>幂等性[或者http幂等性]的理解</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/mi-deng-xing-huo-zhe-http-mi-deng-xing-de-li-jie/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/mi-deng-xing-huo-zhe-http-mi-deng-xing-de-li-jie/</id>
    <published>2018-12-04T12:35:56.438Z</published>
    <updated>2018-01-10T14:33:54.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;/p&gt;&lt;h2 id=&quot;怎么理解幂等性&quot;&gt;&lt;a href=&quot;#怎么理解幂等性&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>梦想是一个天真的词，实现梦想是一个残酷的词</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/meng-xiang-shi-yi-ge-tian-zhen-de-ci-shi-xian-meng-xiang-shi-yi-ge-can-ku-de-ci/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/meng-xiang-shi-yi-ge-tian-zhen-de-ci-shi-xian-meng-xiang-shi-yi-ge-can-ku-de-ci/</id>
    <published>2018-12-04T12:35:56.436Z</published>
    <updated>2018-05-18T02:10:02.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;梦想是一个天真的词，实现梦想是一个残酷的词。今天我要探索人工智能啦！&lt;br&gt;&lt;img src=&quot;http://ouuy81imh.bkt.clouddn.com/20180508092648717.png&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>枚举实现单例的原理</title>
    <link href="https://junzhou2016.github.io/2018/12/04/lao-bo-ke/mei-ju-shi-xian-dan-li-yuan-li/"/>
    <id>https://junzhou2016.github.io/2018/12/04/lao-bo-ke/mei-ju-shi-xian-dan-li-yuan-li/</id>
    <published>2018-12-04T12:35:56.434Z</published>
    <updated>2018-08-06T14:01:20.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近因为工作需要需要实现单例模式，考虑到单例模式最简单的实现方式是枚举实现，因此研究了下枚举实现单例模式的原理，下面将从原理、详解两个步骤说明：&lt;br&gt;             一：原理&lt;br&gt;        1、单例模式利用了“&lt;clinit&gt;()”
        
      
    
    </summary>
    
    
  </entry>
  
</feed>
